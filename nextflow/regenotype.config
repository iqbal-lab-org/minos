// You can provide your own VCF file, skipping gathering variants from
// per-sample input VCF files, by filling in the name of your VCF file here:
params.vcf = ""
// Or you can skip variant gathering and gramtools build by providing your
// own gramtools build directory:
params.gramtools_build_dir = ""

// IMPORTANT: you cannot use both params.vcf and params.gramtools_build_dir.


// When gathering variants from per-sample input VCF files, ignore variants
// that have REF length longer than this value.
params.max_ref_allele_len = 50

// When making reference VCF for regenotyping, set the maximum alleles at one
// variant site, when generating combinations of variants. If the number of
// combinations is too high, only allele combinations seen in samples are used.
params.max_alleles_per_site = 500



profiles {
    // This is for large data sets. These settings are apprpriate
    // for a set of ~15,500 TB samples
    large {
        params.gramtools_build_cpus = 20
        params.vcf_merge_cpus = 10
        params.vcf_cluster_cpus = 20
        params.number_of_ref_chunks = 300
        params.vcf_combine_batch_size = 300
        params.parse_manifest_cpus = 20

        process {
            withName: vcf_merge {
                memory = {30.GB + 20.GB * task.attempt}
            }
            withName: vcf_cluster {
                memory = {15.GB + 10.GB * task.attempt}
            }
            withName: gramtools_build {
                cpus = 20
                memory = {10.GB * task.attempt}
            }
            withName: minos {
                memory = {5.GB * task.attempt}
            }
        }
    }

    // This is a guess at what parameters are resonable for a data set
    // with 100s of samples. To be tested on real data, then can tweak.
    medium {
        params.gramtools_build_cpus = 10
        params.vcf_merge_cpus = 5
        params.vcf_cluster_cpus = 5
        params.number_of_ref_chunks = 100
        params.vcf_combine_batch_size = 50
        params.parse_manifest_cpus = 5

        process {
            withName: vcf_merge {
                memory = {10.GB + 10.GB * task.attempt}
            }
            withName: vcf_cluster {
                memory = {5.GB + 5.GB * task.attempt}
            }
            withName: gramtools_build {
                cpus = 10
                memory = {10.GB * task.attempt}
            }
            withName: minos {
                memory = {4.GB * task.attempt}
            }
        }
    }

    // You are unlikely to want to use this!
    // It's used for the automated tests for the minos repo, which uses tiny
    // input data and hence only needs tiny memory
    tiny {
        params.gramtools_build_cpus = 1
        params.vcf_merge_cpus = 1
        params.vcf_cluster_cpus = 1
        params.number_of_ref_chunks = 1
        params.vcf_combine_batch_size = 2
        params.parse_manifest_cpus = 1

        process {
            withName: minos {
                memory = "500 MB"
                errorStrategy = {task.attempt < 1 ? 'retry' : "ignore"}
                maxRetries = 1
            }
        }
    }
}

